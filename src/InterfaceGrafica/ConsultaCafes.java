/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceGrafica;

import Funcionalidade.Espaco;
import Funcionalidade.Evento;
import Funcionalidade.Pessoa;
import Funcionalidade.Sala;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jean
 */
public class ConsultaCafes extends javax.swing.JFrame {
private int[] ids;
    DefaultTableModel modeloEtUm = new DefaultTableModel();
    DefaultTableModel modeloEtDois = new DefaultTableModel();
    
    public void preparaTabelas() {
        modeloEtUm.addColumn("Pessoas na Etapa 1");
        modeloEtDois.addColumn("Pessoas na Etapa 2");

    }

    private void listarCafes() throws Exception {
        listaCafes.removeAllItems();

        Espaco[] lista = new Evento().getCafes();

        listaCafes.addItem("Selecione um Espaço de Café");
        ids = new int[lista.length];

        for (int i = 0; i < lista.length; i++) {
            String nome = lista[i].getNome();
           
            listaCafes.addItem(lista[i].getNome());
            ids[i] = lista[i].getId();

        }

    }

    public void updatePessoaNaTabela() {

        int indexSelecionado = listaCafes.getSelectedIndex();

        if (indexSelecionado > 0) {
            if (modeloEtUm.getRowCount() > 0) {
                int x = modeloEtUm.getRowCount();
                for(int a = 0; a < x; a++){
                     modeloEtUm.removeRow(0);
                }
            }
            if (modeloEtDois.getRowCount() > 0) {
                int x = modeloEtDois.getRowCount();
                for(int a = 0; a < x; a++){
                     modeloEtDois.removeRow(0);
                }
            }

            int id = ids[indexSelecionado - 1];

            try {
                Pessoa[] pessoas = new Sala(id).getNomePessoasEtapaUm(1);
                
                for (int i=0; i<pessoas.length; i++) {
                    String nome = pessoas[i].getNomeCompleto();
                    Vector row = new Vector();
                    row.add(nome);
                    modeloEtUm.addRow(row);
                }
                
                
                pessoas = new Sala(id).getNomePessoasEtapaUm(2);
                for (int i=0; i<pessoas.length; i++) {
                    String nome = pessoas[i].getNomeCompleto();
                    Vector row = new Vector();
                    row.add(nome);
                    modeloEtDois.addRow(row);
                }
            } catch (Exception ex) {
                System.out.println("Nao montou tabelas");
            }
        }
    }
    
    public ConsultaCafes() {
        setTitle("Consultar Espaço do Café");
        setResizable(false);
        setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("icol.png")).getImage());
        initComponents();

        preparaTabelas();
        tabelaUm.setModel(modeloEtUm);
        tabelaUm.setRowSelectionAllowed(true);
        tabelaUm.setColumnSelectionAllowed(false);

        tabelaDois.setModel(modeloEtDois);
        tabelaDois.setRowSelectionAllowed(true);
        tabelaDois.setColumnSelectionAllowed(false);

        try {
            listarCafes();
        } catch (Exception e) {
            System.out.println("Não construiu combo "+e.getMessage());
        }

        listaCafes.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                updatePessoaNaTabela();

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listaCafes = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUm = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDois = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listaCafes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabelaUm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaUm);

        tabelaDois.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelaDois);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Espaços do café");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(listaCafes, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listaCafes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaCafes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaCafes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaCafes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaCafes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaCafes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> listaCafes;
    private javax.swing.JTable tabelaDois;
    private javax.swing.JTable tabelaUm;
    // End of variables declaration//GEN-END:variables
}
